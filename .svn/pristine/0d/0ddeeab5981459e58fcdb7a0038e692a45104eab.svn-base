using System;
using System.Linq;
using System.Web;
using Yaohuasoft.Framework.DAL;
using Yaohuasoft.Framework.Web;
using Yaohuasoft.Framework.Library;
using Yaohuasoft.Framework.BLL;
using System.Runtime.Serialization;

namespace Yaohuasoft.Framework.Web
{
    /// <summary>
    /// H5PayHandler 的摘要说明
    /// </summary>
    public class H5PayHandler : BaseHanlder
    {
        protected override void ExecuteRequest(HttpContext context)
        {
            base.ExecuteRequest(context);
            try
            {
                var type = request["type"] ?? "";
                if (type.IsNullOrEmptys())
                {
                    throw new Exception("参数不能为空");
                }
                /* var str_user = request["user"] ?? "";
                 SysUserDALEntity user = new SysUserDALEntity();
                 SysUserDALEntity tempUser = new SysUserDALEntity();
                 //验证账号
                 if (!str_user.IsNullOrEmptys())
                 {
                     user = JsonSerializer.Deserialize<SysUserDALEntity>(str_user);
                     SysUserQueryParameter UserParam = new SysUserQueryParameter();
                     if (user.UserName.IsNullOrEmptys())
                     {
                         throw new CommonException("请登录！");
                     }
                     UserParam.EqualTo.UserName = user.UserName;
                     tempUser = SysUserDAL.Select(0, UserParam).FirstOrDefault();
                     if (tempUser == null)
                     {
                         throw new CommonException("不存在该用户,请重新登录！");
                     }
                     if (tempUser.UserState == "失效")
                     {
                         throw new CommonException("该帐号已失效！");
                     }
                     if (tempUser.UserState == "停用")
                     {
                         throw new CommonException("该帐号已停用！");
                     }
                 }
                 else
                 {
                     throw new CommonException("请登录！");
                 }*/
                switch (type)
                {
                    //H5Pay
                    case "H5Pay":
                        {
                            #region 生成充值订单记录，签名参数生成支付form 调起支付
                            //var amount = request["amount"] ?? "";
                            //var AppLogId = request["AppLogId"] ?? "";

                            var orderNo = request["orderId"] ?? "";//订单ID


                            /*if (amount.IsNullOrEmptys())
                            {
                                throw new CommonException("请输入金额~");
                            }*/
                            LanOrderListDALEntity entity = new LanOrderListDALEntity();

                            //查询订单
                            if (orderNo.IsNullOrEmptys() || orderNo == "undefined")
                            {
                                throw new Exception("订单号不存在");
                            }
                            else
                            {   //有订单支付
                                /*entity = AppLogADAL.Select(0, AppLogId);
                                if (entity == null)
                                {
                                    throw new CommonException("订单已失效~请取消订单重新下单支付~");
                                }*/
                                LanOrderListQueryParameter param = new LanOrderListQueryParameter();
                                param.EqualTo.LanOrderType = "待付款";
                                param.EqualTo.LanOrderListId = orderNo;//订单ID

                                var Order = LanOrderListDAL.Select(0, param).FirstOrDefault();
                                if (Order.IsNullOrEmptys())
                                {
                                    throw new Exception("订单不存在");
                                }
                                else
                                {

                                    H5Pay data = new H5Pay();
                                    //string KeyPublic = PayConfig.KeyPublic;//公钥
                                    //string PrivateKey = PayConfig.PrivateKey;//私钥
                                    data.requestNo = (new DateTime()).ToString("yyyyMMdd") + orderNo;//流水号
                                    data.version = PayConfig.version;//版本号
                                    data.productId = "0126";//产品类型
                                    data.transId = "12";//交易类型
                                    data.merNo = PayConfig.merNo;//商户号
                                    data.orderDate = DateTime.Now.Date.ToString("yyyyMMdd");//订单日期
                                    data.orderNo = Order.LanOrderListId;//订单号
                                    data.returnUrl = PayConfig.returnUrl;//页面通知地址
                                    data.notifyUrl = PayConfig.notifyUrl;//异步通知地址
                                    data.transAmt = (Order.LanOrderListSumprice * 100).ToString().Replace(".00", null);//交易金额
                                    data.commodityName = "test";//商品名称
                                    //签名数据设置
                                    //var resdata = RSAHelper.requestPay(data);
                                    //转换后私钥
                                    //var xmlPrivateKeys = "";
                                    //转换后公钥
                                    //var xmlPublicKey = "";
                                    ////自己生成公钥与私钥
                                    ////RSAHelper.RSAKey(out xmlKeys, out xmlPublicKey);
                                    //RSA私钥格式转换，java->.net                          
                                    //xmlPrivateKeys = RSAHelper.RSAPrivateKeyJava2DotNet(PrivateKey);
                                    //对数据签名
                                    data.signature = RSAHelper.requestPay(data);
                                    //RSA公钥格式转换，java->.net    转换后的公钥   
                                    //xmlPublicKey = RSAHelper.RSAPublicKeyJava2DotNet(KeyPublic);
                                    //验证签名
                                    //var boolcheck = RSAHelper.verify(xmlPublicKey, resdata, data.signature);
                                    //var url = "http://13.127.174.232/payment-gate-web/gateway/api/backTransReq?" + resdata + "&signature=" +data.signature;
                                    //var boolcheck2 = RSAHelper.verify(xmlPublicKey, data.ToString(), data.signature);
                                    ////构建form 返回提交
                                    var form = "<form id='myform' action = 'http://13.127.174.232/payment-gate-web/gateway/api/backTransReq'accept-charset='utf-8' enctype='application/x-www-form-urlencoded' onsubmit='document.charset='utf-8;' method = 'POST'  name = 'myform'>" +
                                                " <input type = 'text' id='requestNo' class='form-control' name ='requestNo' value =" + data.requestNo + " >" +
                                                " <input type = 'text' id='version' class='form-control' name='version' value=" + data.version + ">" +
                                                " <input type = 'text' id='productId' class='form-control' name='productId' value=" + data.productId + ">" +
                                                " <input type = 'text' id='transId' class='form-control' name='transId' value=" + data.transId + ">" +
                                                " <input type = 'text' id='merNo' class='form-control' name='merNo' value=" + data.merNo + ">" +
                                                " <input type = 'text' id='orderDate' class='form-control' name='orderDate' value=" + data.orderDate + ">" +
                                                " <input type = 'text' id='orderNo' class='form-control' name='orderNo'  value=" + data.orderNo + ">" +
                                                 " <input type = 'text' id='returnUrl' class='form-control' name='returnUrl' value=" + data.returnUrl + ">" +
                                                " <input type = 'text' id='notifyUrl' class='form-control' name='notifyUrl' value=" + data.notifyUrl + ">" +
                                                " <input type = 'text' id='transAmt' class='form-control' name='transAmt' value=" + data.transAmt + ">" +
                                                " <input type = 'text' id='commodityName' class='form-control' name='commodityName' value=" + data.commodityName + ">" +
                                                " <input type = 'text' id='signature' class='form-control' name='signature' value=" + data.signature + ">" +
                                                "<input type = 'submit' class='btn btn-success'  value='提交'>" +
                                                "</form>";
                                    output = JsonSerializer.Serialize(new { result_state = true, form = form });
                                }
                            }
                            #endregion
                            #region
                            //签名数据
                            /* H5Pay data = new H5Pay();
                             string KeyPublic = PayConfig.KeyPublic;
                             string PrivateKey = PayConfig.PrivateKey;
                             data.merId = PayConfig.merId;// 商户支付订单ID 最大长度30
                             data.orderNo = entity.AppLogId;//支付订单ID
                             data.amount = amount;// 订单金额
                             data.payType = PayConfig.payType;//支付类型
                             data.goodsName = PayConfig.goodsName;//支付产品名
                             data.mp = "";
                             data.notifyUrl = PayConfig.notifyUrl;//后台异步通知地址
                             data.returnUrl = PayConfig.returnUrl;//页面通知地址页面回调url 
                             data.payerNo = ""; //付款人卡号
                             //签名数据设置
                             var resdata = RSAHelper.requestPay(data);
                             //转换后私钥
                             var xmlPrivateKeys = "";
                             //转换后公钥
                             //var xmlPublicKey = "";
                             ////自己生成公钥与私钥
                             ////RSAHelper.RSAKey(out xmlKeys, out xmlPublicKey);
                             //RSA私钥格式转换，java->.net                          
                             xmlPrivateKeys = RSAHelper.RSAPrivateKeyJava2DotNet(PrivateKey);
                             //对数据签名
                             data.sign = RSAHelper.sign(xmlPrivateKeys, resdata);
                             //RSA公钥格式转换，java->.net      
                             var xmlPublicKey = RSAHelper.RSAPublicKeyJava2DotNet(KeyPublic);
                             //验证签名
                             var boolcheck = RSAHelper.verify(xmlPublicKey, resdata, data.sign);

                             YaohuaMonitor.RecordLog("订单ID: " + entity.AppLogId + ", 订单金额：" + amount + " 签名数据：" + data.sign, YaohuaLogType.Monitor, "充值发起调试");

                             ////构建form 返回提交
                             var form = "<form id='myform' action = 'https://t.fchzf.com/trade/jhpay' method = 'get'  name = 'sendpay'>" +
                                         " <input type = 'text' id='merId' class='form-control' name ='merId' value =" + data.merId + " >" +
                                         " <input type = 'text' id='orderNo' class='form-control' name='orderNo' value=" + data.orderNo + ">" +
                                         " <input type = 'text' id='amount' class='form-control' name='amount' value=" + data.amount + ">" +
                                         " <input type = 'text' id='payType' class='form-control' name='payType' value=" + data.payType + ">" +
                                         " <input type = 'text' id='goodsName' class='form-control' name='goodsName' value=" + data.goodsName + ">" +
                                         " <input type = 'text' id='mp' class='form-control' name='mp'  value=" + data.mp + ">" +
                                         " <input type = 'text' id='notifyUrl' class='form-control' name='notifyUrl' value=" + data.notifyUrl + ">" +
                                         " <input type = 'text' id='returnUrl' class='form-control' name='returnUrl' value=" + data.returnUrl + ">" +
                                         " <input type = 'text' id='sign' class='form-control' name='sign' value=" + data.sign + ">" +
                                         "<input type = 'submit' class='btn btn-success'  value='提交'>" +
                                         "</form>";
                             output = JsonSerializer.Serialize(new { result_state = true, form = form, AppLogId = entity.AppLogId });*/
                            #endregion
                        }
                        break;

                    //余额待付（银行转账）
                    #region
                    case "BalancePay":
                        {
                            var transAmt = request["transAmt"] ?? "";//转账金额（分）
                            var Compay = request["Compay"] ?? "";//对公对私（0为对私，1为对公）
                            var customerName = request["customerName"] ?? "";//代付账户名
                            var accNo = request["accNo"] ?? "";//银行卡号
                            var orderNo = request["orderId"] ?? "";//订单ID

                            BalancePay data = new BalancePay();
                            //string KeyPublic = PayConfig.KeyPublic;//公钥
                            //string PrivateKey = PayConfig.PrivateKey;//私钥
                            data.requestNo = YaohuaID.NewID();//流水号
                            data.version = PayConfig.version;//版本号
                            data.productId = "0201";//产品类型
                            data.transId = "07";//交易类型
                            data.merNo = PayConfig.merNo;//商户号
                            data.orderDate = DateTime.Now.Date.ToString("yyyyMMdd");//交易日期
                            data.orderNo = orderNo;//商户订单号
                            data.notifyUrl = PayConfig.notifyUrl;//异步通知地址
                            data.transAmt = transAmt;//代付金额(分)
                            data.isCompay = Compay;//对公对私
                            data.customerName = customerName;//代付账户名称
                            data.accNo = accNo;//银行号      
                            //签名数据设置
                            //var resdata = RSAHelper.BalancePay(data);
                            //对数据签名
                            data.signature = RSAHelper.BalancePay(data);

                            //var url = "http://13.127.174.232/payment-gate-web/gateway/api/backTransReq?" + resdata + "&signature=" + data.signature;
                            ////构建form 返回提交
                            var form = "<form id='myform' action = 'http://13.127.174.232/payment-gate-web/gateway/api/backTransReq'accept-charset='utf-8' enctype='application/x-www-form-urlencoded' onsubmit='document.charset='utf-8;' method = 'POST'  name = 'myform'>" +
                                        " <input type = 'text' id='requestNo' class='form-control' name ='requestNo' value =" + data.requestNo + " >" +
                                        " <input type = 'text' id='version' class='form-control' name='version' value=" + data.version + ">" +
                                        " <input type = 'text' id='productId' class='form-control' name='productId' value=" + data.productId + ">" +
                                        " <input type = 'text' id='transId' class='form-control' name='transId' value=" + data.transId + ">" +
                                        " <input type = 'text' id='merNo' class='form-control' name='merNo' value=" + data.merNo + ">" +
                                        " <input type = 'text' id='orderDate' class='form-control' name='orderDate' value=" + data.orderDate + ">" +
                                        " <input type = 'text' id='orderNo' class='form-control' name='orderNo'  value=" + data.orderNo + ">" +
                                        " <input type = 'text' id='notifyUrl' class='form-control' name='notifyUrl' value=" + data.notifyUrl + ">" +
                                        " <input type = 'text' id='transAmt' class='form-control' name='transAmt' value=" + data.transAmt + ">" +
                                        " <input type = 'text' id='isCompay' class='form-control' name='isCompay' value=" + data.isCompay + ">" +
                                        " <input type = 'text' id='commodityName' class='form-control' name='commodityName' value=" + data.commodityName + ">" +
                                        " <input type = 'text' id='signature' class='form-control' name='signature' value=" + data.signature + ">" +
                                        "<input type = 'submit' class='btn btn-success'  value='提交'>" +
                                        "</form>";
                            output = JsonSerializer.Serialize(new { result_state = true, form = form });
                        }
                        break;
                    #endregion
                    #region
                    /* case "Ispay":
                         {
                             #region 判断支付是否成功
                             var AppLogId = request["AppLogId"] ?? "";
                             var order = AppLogADAL.Select(0, AppLogId);
                             if (order.IsNullOrEmptys())
                             {
                                 throw new Exception("查无订单！");
                             }
                             if (order.AppState == "成功")
                             {
                                 output = JsonSerializer.Serialize(new { result_state = true, msg = "支付成功" });
                             }
                             else
                             {
                                 output = JsonSerializer.Serialize(new { result_state = true, msg = "该订单" + order.PayReason });
                             }
                             #endregion
                         }
                         break;*/
                    /*case "PayCancel":
                        {
                            #region 判断支付是否成功
                            var AppLogId = request["AppLogId"] ?? "";
                            var order = AppLogADAL.Select(0, AppLogId);
                            if (order.IsNullOrEmptys())
                            {
                                throw new Exception("查无订单！");
                            }
                            if (order.AppState == "取消订单")
                            {
                                throw new Exception("订单已取消！");
                            }
                            order.AppState = "取消订单";
                            AppLogADAL.Merge(0, order);

                            output = JsonSerializer.Serialize(new { result_state = true, msg = "取消成功" });

                            #endregion
                        }
                        break;*/
                    //H5Pay
                    /*case "H5rhPay":
                        {
                            #region 生成充值订单记录，签名参数生成支付form 调起支付
                            var amount = request["amount"] ?? "";                 

                            if (amount.IsNullOrEmptys())
                            {
                                throw new CommonException("请输入金额~");
                            }
                            AppLogADALEntity entity = new AppLogADALEntity();
                            entity = new AppLogADALEntity();
                            entity.AppLogId = YaohuaID.NewID();
                            entity.SysUserId = tempUser.SysUserId;
                            entity.SysUserName = tempUser.UserName;
                            entity.DateTime = DateTime.Now;
                            entity.LossTime = DateTime.Now.AddMinutes(+10);
                            entity.Money = amount.ToDecimal();
                            entity.AppType = "充值";
                            entity.AppState = "待支付";
                            AppLogADAL.Merge(0, entity);


                            //一、验证所使用参数‘key’加密方法：
                            //参数‘key’的加密方式为两位随机数与贵方user_key合并后，通过md5加密得到。注意，加密所使用的随机数，传值的时候，需一同传给我方，以便进行验证。
                            //例：贵方的user_key为ea7f6a22247348dc1fea52aec5f2e3ce，随机数为88，则
                            //key的值为 md5(‘88ea7f6a22247348dc1fea52aec5f2e3ce’)，md5加密结果为6e385211b2322c9f5614e230b7473d60

                            Random r = new Random();
                            var num = r.Next(10, 99);//随机生成一个2位整数                    
                            var user_key = "8c67dc247fe98431547cd70cde1c834c";
                            var key = (num + user_key).MD5_Encode32().ToLower();

                            H5rhPay rhdata = new H5rhPay();
                            rhdata.rand = num;
                            rhdata.member_id = "13360099999";
                            rhdata.order_id = entity.AppLogId;
                            rhdata.user_name = tempUser.UserName;
                            rhdata.order_money = amount.ToDecimal();
                            rhdata.istype = 2;
                            rhdata.key = key;
                            rhdata.notify_url = "http://www.tgyule.cn/WebHandler/rhNotifyHandler.ashx";

                            var resdata = JsonSerializer.Serialize(rhdata);

                            //var resdata = data.Serialize();

                            string KeyPublic = "MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCfEyWPmSp5a1Az7GJRmT7yWZoqpgBhy8I+STAzqHfeQPcZkJ627U2svv7Gq0y9TXsGl81PfrE8dfI99t+cAeF+hGDw5iNLPWp/ZhNX2dkIHn9RyliYidn5rb+0wlYfg3xXRoOIiOj6Pws6aqS8YC+1zy/nKwQqfPnLSmYQG6y6cQIDAQAB";
                            var xmlPublicKeys = "";
                            //转换后公钥                     
                            //RSA公钥格式转换，java->.net                           
                            xmlPublicKeys = RSAHelper.RSAPublicKeyJava2DotNet(KeyPublic);
                            //数据分割，数据
                            var data1 = RSAHelper.RSAEncrypt1(xmlPublicKeys, resdata.SubStr(0, 50));
                            var data2 = RSAHelper.RSAEncrypt1(xmlPublicKeys, resdata.SubStr(50, 50));
                            var data3 = RSAHelper.RSAEncrypt1(xmlPublicKeys, resdata.SubStr(100, 50));
                            var data4 = RSAHelper.RSAEncrypt1(xmlPublicKeys, resdata.SubStr(150, 50));
                            var data5 = RSAHelper.RSAEncrypt1(xmlPublicKeys, resdata.SubStr(200, 50));
                            //var data6 = RSAHelper.RSAEncryptByPublicKey(xmlPublicKeys, resdata);
                            var info = data1 + data2 + data3 + data4 + data5;                        
                            ////构建form 返回提交
                            var form = "<form id='myform' action = 'http://jp.rhpays.com/api/order/pay' method = 'post'>" +
                                        " <input type = 'text' id='info' class='form-control' name='info' value=" + info + ">" +
                                        " <input type = 'text' id='is_form' class='form-control' name='is_form' value=" + 1 + ">" +
                                        "<input type = 'submit' class='btn btn-success'  value='提交'>" +
                                        "</form>";
                            //data6 = data6.UrlEncode();
                            //var url = "http://jp.rhpays.com/api/order/pay?info=" + info.UrlEncode() + "&is_form=1";
                            //var strToken = CommonMethod.ApiPost(url, "");
                            output = JsonSerializer.Serialize(new { result_state = true, form = form, AppLogId = entity.AppLogId });
                            #endregion
                        }
                        break;*/
                    #endregion

                    //////支付
                    #region
                    case "MyH5Pay":
                        {
                            string money = request["money"] ?? "";//金额
                            string payMethod = request["payMethod"] ?? "";//付款方式
                            //string acc_no = request["acc_no"] ?? "";//收款人账号
                            //string phone = request["phone"] ?? "";//银行预留手机号
                            //string bank_settle_no = request["bank_settle_no"] ?? "";//开户行行号，对公必要
                            string remark = request["remark"] ?? "";//商品描述
                            if (money.IsNullOrEmptys() || payMethod.IsNullOrEmptys() || remark.IsNullOrEmptys())
                            {
                                throw new CommonException("请输入完整的信息");
                            }
                            else
                            {
                                if (payMethod == "微信APP支付") payMethod= "10009";
                                if (payMethod == "支付宝H5") payMethod = "10008";
                                if (payMethod == "银联二维码") payMethod = "10012";
                                if (payMethod == "QQ扫码") payMethod = "10011";

                                MyPay data = new MyPay();
                                data.merchantNo = NewPayConfig.merchant_code;
                                data.requestNo = RSAHelper.GetTimeStamp();//流水号
                                data.money = money;
                                data.payDate = data.requestNo;//时间戳
                                data.payMethod = payMethod;
                                //data.pageUrl = "www.baidu.com/";
                                //data.backUrl = "www.baidu.com/";
                                data.remark = remark;                                

                                //ascii数据
                                var resdata = RSAHelper.OnePaymentPay(data);
                                var To_be_encrypted = resdata + "key=" + NewPayConfig.key;

                                //私钥
                                //var xmlPrivateKeys = RSAHelper.RSAPrivateKeyJava2DotNet(NewPayConfig.priKey);
                                //公钥
                                //var xmlPublicKey = RSAHelper.RSAPublicKeyJava2DotNet(NewPayConfig.pubKey);
                                //data.sign = RSAHelper.SignData(To_be_encrypted);
                                data.sign = To_be_encrypted.MD5_Encode32();
                                //data.sign = RSAHelper.sign1(xmlPrivateKeys, To_be_encrypted);
                                //var boolcheck = RSAHelper.verify(xmlPublicKey, resdata, data.sign);
                                ////构建form 返回提交
                                var form = "<form id='myform' action = 'http://pay.yifubaopay.com/ownPay/pay' method = 'GET'  name = 'myform'>" +
                                " <input type = 'text' id='merchantNo' class='form-control' name ='merchantNo' value =" + data.merchantNo + " >" +
                                            " <input type = 'text' id='requestNo' class='form-control' name='requestNo' value=" + data.requestNo + ">" +
                                            " <input type = 'text' id='money' class='form-control' name='money' value=" + data.money + ">" +
                                            " <input type = 'text' id='payDate' class='form-control' name='payDate' value=" + data.payDate + ">" +
                                            " <input type = 'text' id='payMethod' class='form-control' name='payMethod' value=" + data.payMethod + ">" +                                            
                                            " <input type = 'text' id='remark' class='form-control' name='remark' value=" + data.remark + ">" +                                           
                                            " <input type = 'text' id='sign' class='form-control' name='sign' value=" + data.sign + ">" +
                                            "<input type = 'submit' class='btn btn-success'  value='提交'>" +
                                            "</form>";
                                output = JsonSerializer.Serialize(new { result_state = true, form = form });
                            }
                        }
                        break;
                    #endregion
                    ///
                    ///
                    ///单笔代付
                    #region
                    case "OnePayment":
                        {
                            int money = (request["money"] ?? "").ToInt();//金额
                            string acct_name = request["acct_name"] ?? "";//收款人姓名
                            string acct_no = request["acc_no"] ?? "";//收款人账号
                            string phone = request["phone"] ?? "";//银行预留手机号
                            //string bank_settle_no = request["bank_settle_no"] ?? "";//开户行行号，对公必要
                            string remark = request["remark"] ?? "";//附言
                            if (money.IsNullOrEmptys() || acct_name.IsNullOrEmptys() || phone.IsNullOrEmptys() || remark.IsNullOrEmptys())
                            {
                                throw new CommonException("请输入完整的信息");
                            }
                            else
                            {
                                string requestno = YaohuaID.NewID();


                                OnePayment data = new OnePayment();
                                data.version = NewPayConfig.version;
                                data.merchant_code = NewPayConfig.merchant_code;
                                data.requestno = requestno;//流水号
                                data.money = money;
                                data.money_type = NewPayConfig.money_type;
                                data.product_type = NewPayConfig.product_type;
                                data.acct_name = acct_name;
                                data.acct_no = acct_no;
                                data.acct_type = NewPayConfig.acct_type;
                                data.phone = phone;
                                //data.bank_settle_no = bank_settle_no;
                                data.remark = remark;

                                //ascii数据
                                var resdata= RSAHelper.OnePaymentPay(data);
                                var To_be_encrypted = resdata + "key=" + NewPayConfig.key;

                                //私钥
                                var xmlPrivateKeys = RSAHelper.RSAPrivateKeyJava2DotNet(NewPayConfig.priKey);
                                //公钥
                                //var xmlPublicKey = RSAHelper.RSAPublicKeyJava2DotNet(NewPayConfig.pubKey);

                                data.sign = RSAHelper.sign(xmlPrivateKeys, To_be_encrypted);
                                //var boolcheck = RSAHelper.verify(xmlPublicKey, resdata, data.sign);

                                ////构建form 返回提交
                                var form = "<form id='myform' action = 'http://api_pay.yifubaopay.com/payment/paymentApi' method = 'GET'  name = 'myform'>" +
                                            " <input type = 'text' id='version' class='form-control' name ='version' value =" + data.version + " >" +
                                            " <input type = 'text' id='merchant_code' class='form-control' name='merchant_code' value=" + data.merchant_code + ">" +
                                            " <input type = 'text' id='requestno' class='form-control' name='requestno' value=" + data.requestno + ">" +
                                            " <input type = 'text' id='money' class='form-control' name='money' value=" + data.money + ">" +
                                            " <input type = 'text' id='money_type' class='form-control' name='money_type' value=" + data.money_type + ">" +
                                            " <input type = 'text' id='product_type' class='form-control' name='product_type' value=" + data.product_type + ">" +
                                            " <input type = 'text' id='acct_name' class='form-control' name='acct_name'  value=" + data.acct_name + ">" +
                                            " <input type = 'text' id='acct_no' class='form-control' name='acct_no' value=" + data.acct_no + ">" +
                                            " <input type = 'text' id='acct_type' class='form-control' name='acct_type' value=" + data.acct_type + ">" +
                                            " <input type = 'text' id='phone' class='form-control' name='phone' value=" + data.phone + ">" +
                                            " <input type = 'text' id='remark' class='form-control' name='remark' value=" + data.remark + ">" +
                                            " <input type = 'text' id='sign' class='form-control' name='sign' value=" + data.sign + ">" +
                                            "<input type = 'submit' class='btn btn-success'  value='提交'>" +
                                            "</form>";
                                output = JsonSerializer.Serialize(new { result_state = true, form = form });
                            }
                        }
                        break;
                        #endregion
                }
            }
            catch (Exception ex)
            {
                output = JsonSerializer.Serialize(new
                {
                    result_state = false,
                    msg = ex.Message
                });
            }
        }

    }

    [Serializable]
    internal class CommonException : Exception
    {
        public CommonException()
        {
        }

        public CommonException(string message) : base(message)
        {
        }

        public CommonException(string message, Exception innerException) : base(message, innerException)
        {
        }

        protected CommonException(SerializationInfo info, StreamingContext context) : base(info, context)
        {
        }
    }
}